# pacman
alias update='alias | grep "update=";sudo pacman -Syu'

# edit this file
alias ealias="vim $HOME/.aliases"
alias findAlias="alias | grep "

# list usb drives 
alias lusb="ls -al /run/media/$USER/"

# ssh
alias rssh='ssh-keygen -R'	# Remove ssh key for host

# copy to clipboard
alias clip="xclip -selection clipboard"

# windscribe
alias wco="windscribe connect"
alias wcd="windscribe disconnect"

# docker
alias cleanDocker='docker rm $(docker ps -a -q) && docker rmi $(docker image ls -q)'
alias dil='docker image ls'
alias dci='docker-compose images'
alias up='docker-compose up'
alias down='docker-compose down'

# start service
alias start='systemctl start' 		# start a service
alias stop='systemctl stop'	  		# stop a service
alias enable='systemctl enable'		# enable a service to start on boot
alias disable='systemctl disable'	# disable a service to start on boot
alias restart='systemctl restart'	# restart a service

# encrypt usb drive
alias encrypt="encfs /run/media/$USER/$USER_drive/.crypt $HOME/crypt_usb"
alias dencrypt="fusermount -u $HOME/crypt_usb"

# encrypt mega files
alias megdecrypt="encfs $HOME/.mega $HOME/mega"
alias megencrypt="fusermount -u $HOME/mega"

# dotnet
alias dor="dotnet build && dotnet run"

## functions
# extract data
extract () {
        for archive in $*; do
                if [ -f $archive ] ; then
                        case $archive in
                                *.tar.bz2)   tar xvjf $archive    ;;
                                *.tar.gz)    tar xvzf $archive    ;;
                                *.bz2)       bunzip2 $archive     ;;
                                *.rar)       rar x $archive       ;;
                                *.gz)        gunzip $archive      ;;
                                *.tar)       tar xvf $archive     ;;
                                *.tbz2)      tar xvjf $archive    ;;
                                *.tgz)       tar xvzf $archive    ;;
                                *.zip)       unzip $archive       ;;
                                *.Z)         uncompress $archive  ;;
                                *.7z)        7z x $archive        ;;
                                *)           echo "don't know how to extract '$archive'..." ;;
                        esac
                else
                        echo "'$archive' is not a valid file!"
                fi
        done
}


# enter in interactive mode with docker
rund () {
	if [[ -z "$1" ]]; then
    	echo "Interactive mode inside a docker container\nUsage: $0 container-id"
		return 1
	fi
	docker run -it $1 /bin/bash
}
# run a command inside a service
rundc () {
	if [[ "$#" < 2 ]]; then
    	echo "Run a command in a docker-compose service\nUsage: $0 service command"
		return 1
	fi
	docker-compose run --rm $1 ${@:2}
}

# update my alias
ualias() {
	source $HOME/.zshrc
	rsync $HOME/.aliases $HOME/config/.aliases
	if [[ "$#" < 1 ]]; then
		return 0
	fi
	
	if [[ "$1" != "c" ]]; then
		echo "To commit aliases change: $0 c message"
		return 1
	fi

	if [[ "$#" < 2 ]]; then
		msg="update alias"
	else
		msg=${@:2}
	fi

	tmp=$PWD
	cd $HOME/config/
	git add .aliases
	git commit -m $msg
	git push
	cd $tmp
}

# if tmp alias import them
if [ -f ~/.tmp.aliases ]; then
	source ~/.tmp.aliases 
fi

if [ -f $STARTER/.starter.aliases ]; then
	source $STARTER/.starter.aliases
fi
