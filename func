# Function to open a file
open () {
	if [[ -z "$1" ]]; then
    	echo "Open a file\nUsage: $0 file"
		return 1
	fi
	xdg-open $1 2> /dev/null
}

# extract data
extract () {
        for archive in $*; do
                if [ -f $archive ] ; then
                        case $archive in
                                *.tar.bz2)   tar xvjf $archive    ;;
                                *.tar.gz)    tar xvzf $archive    ;;
                                *.bz2)       bunzip2 $archive     ;;
                                *.rar)       rar x $archive       ;;
                                *.gz)        gunzip $archive      ;;
                                *.tar)       tar xvf $archive     ;;
                                *.tbz2)      tar xvjf $archive    ;;
                                *.tgz)       tar xvzf $archive    ;;
                                *.zip)       unzip $archive       ;;
                                *.Z)         uncompress $archive  ;;
                                *.7z)        7z x $archive        ;;
                                *)           echo "don't know how to extract '$archive'..." ;;
                        esac
                else
                        echo "'$archive' is not a valid file!"
                fi
        done
}


# enter in interactive mode with docker
dsh () {
	if [[ -z "$1" ]]; then
    	echo "Shell inside a docker container\nUsage: $0 container-id"
		return 1
	fi
	docker run -it $1 /bin/bash
}

# enter in interactive mode with docker
dcsh () {
	if [[ -z "$1" ]]; then
    	echo "Go shell into a docker-compose service\nUsage: $0 service"
		return 1
	fi
	docker-compose run $1 sh
}

# execute a command inside a service
dcexec () {
	if [[ "$#" < 2 ]]; then
    	echo "Run a command in a docker-compose service\nUsage: $0 service command"
		return 1
	fi
	docker-compose exec $1 ${@:2}
}


# watch file and restart them
dcwatch () {
	if [[ "$#" < 2 ]]; then
    	echo "Watch ext file and reload docker service\nUsage: $0 service watched_files_extension"
		return 1
	fi
	watchexec --restart --exts $2 --watch . "docker-compose restart $1"
}



# update my alias
ualias() {
	source $HOME/.zshrc

	if [[ "$#" < 1 ]]; then
		return 0
	fi
	
	if [[ "$1" != "c" ]]; then
		echo "To commit aliases change: $0 c message"
		return 1
	fi

	if [[ "$#" < 2 ]]; then
		msg="update alias"
	else
		msg=${@:2}
	fi

	tmp=$PWD
	cd $CONFIG/
	git add func aliases tmp_aliases
	git commit -m $msg
	git push
	cd $tmp
}

#update config
uconfig() {
        cp $HOME/{.gdbinit,.vimrc,.gitconfig} $CONFIG/
	if [[ "$#" < 1 ]]; then
		return 0
	fi
	
	if [[ "$1" != "c" ]]; then
		echo "To commit config change: $0 c message"
		return 1
	fi

	if [[ "$#" < 2 ]]; then
		msg="update config"
	else
		msg=${@:2}
	fi

	tmp=$PWD
	cd $CONFIG/
	git add .
	git commit -m $msg
	git push
	cd $tmp
}

# edit this file
alias efunction="vim $CONFIG/func"
